/**
* This is a backend code for the wix website.
* This code establishes an API endpoint with the outside code (GitHub workflow),
* conduct the security check, and then update the img
* as the targeted GH folder has a new img file.
**/
// references:
// https://www.wix.com/velo/reference/api-overview/site-functionality
// https://www.wix.com/velo/reference/wix-media-backend
// https://www.wix.com/velo/reference/wix-http-functions/introduction

import { ok, notFound, serverError } from 'wix-http-functions';
import {badRequest} from 'wix-http-functions';
import {getSecret} from 'wix-secrets-backend';
import wixMedia from 'wix-media-backend';

// This function compares the authorization key provided in the 
// request headers with the secret key stored in the Secrets Manager.
async function isPermitted(headers){
    try {
        const authHeader = headers['Authorization']; // Ensure the header name matches what's sent by GitHub
        const sharedAuthKey = await getSecret('update_Calendar_API');
        return authHeader === `Bearer ${sharedAuthKey}`; // Typically, auth headers are "Bearer {token}"
    } catch (err) {
        console.error("Error retrieving secret:", err);
        return false;
    }
} 

export async function put_updateImage(request) {
    //url: https://www.stmaryent.com/_functions/updateImage
    
    //Auth check
    const headers = request.headers;
    if (!await isPermitted(headers)) {
        return badRequest({
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                error: 'Not authorized'
            })
        });
    }
    
    // On success auth check:
    try {
        // Extract image data from the request
        const { name, imageBuffer } = await request.body.json();

        // Validate image data
        if (!name || !imageBuffer) {
            return badRequest({
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    error: 'Invalid image data'
                })
            });
        }

        // Upload image to the image library
        const uploadResult = await wixMedia.uploadMedia({
            mediaName: name,
            mediaBuffer: imageBuffer,
            mediaType: 'image/png'
        });

        // Reply on success
        return ok({
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                message: "Image updated successfully",
                url: uploadResult.url 
            })
        });

    } catch (error) {
        // Reply on failed request
        return serverError({
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                message: "Failed to update image",
                error: error.message
            })
        });
    }
}